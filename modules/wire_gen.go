// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package modules

import (
	"github.com/bang9211/ossicones/implements/defaultexplorerserver"
	"github.com/bang9211/ossicones/implements/defaultrestapiserver"
	"github.com/bang9211/ossicones/implements/ossiconesblockchain"
	"github.com/bang9211/ossicones/implements/viperconfig"
	"github.com/bang9211/ossicones/interfaces/blockchain"
	"github.com/bang9211/ossicones/interfaces/config"
	"github.com/bang9211/ossicones/interfaces/explorerserver"
	"github.com/bang9211/ossicones/interfaces/restapiserver"
)

// Injectors from wire.go:

// InitConfig injects dependencies and inits of Config.
func InitConfig() (config.Config, error) {
	configConfig := viperconfig.NewViperConfig()
	return configConfig, nil
}

// InitBlockchains injects dependencies and inits of Blockchain.
func InitBlockchain(config2 config.Config) (blockchain.Blockchain, error) {
	blockchainBlockchain := ossiconesblockchain.GetOrCreate(config2)
	return blockchainBlockchain, nil
}

// InitHTTPServer injects dependencies and inits of ExplorerServer.
func InitHTTPServer(homePath string, config2 config.Config, blockchain2 blockchain.Blockchain) (explorerserver.ExplorerServer, error) {
	explorerServer := defaultexplorerserver.GetOrCreate(config2, homePath, blockchain2)
	return explorerServer, nil
}

// InitAPIServer injects dependencies and inits of APiServer.
func InitAPIServer(homePath string, config2 config.Config, blockchain2 blockchain.Blockchain) (restapiserver.RESTAPIServer, error) {
	restapiServer := defaultrestapiserver.GetOrCreate(config2, homePath, blockchain2)
	return restapiServer, nil
}
