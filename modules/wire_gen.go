// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package modules

import (
	"github.com/bang9211/ossicones/implements/defaultexplorerserver"
	"github.com/bang9211/ossicones/implements/defaultrestapiserver"
	"github.com/bang9211/ossicones/implements/ossiconesblockchain"
	"github.com/bang9211/ossicones/interfaces/blockchain"
	"github.com/bang9211/ossicones/interfaces/config"
	"github.com/bang9211/ossicones/interfaces/explorerserver"
	"github.com/bang9211/ossicones/interfaces/restapiserver"
)

// Injectors from wire.go:

// InjectOssiconesBlockchain injects dependencies and inits of Blockchain.
func InjectOssiconesBlockchain(config2 config.Config) (blockchain.Blockchain, error) {
	blockchainBlockchain := ossiconesblockchain.GetOrCreate(config2)
	return blockchainBlockchain, nil
}

// InjectDefaultExplorerServer injects dependencies and inits of ExplorerServer.
func InjectDefaultExplorerServer(config2 config.Config, blockchain2 blockchain.Blockchain) (explorerserver.ExplorerServer, error) {
	explorerServer := defaultexplorerserver.GetOrCreate(config2, blockchain2)
	return explorerServer, nil
}

// InjectDefaultRESTAPIServer injects dependencies and inits of APiServer.
func InjectDefaultRESTAPIServer(config2 config.Config, blockchain2 blockchain.Blockchain) (restapiserver.RESTAPIServer, error) {
	restapiServer := defaultrestapiserver.GetOrCreate(config2, blockchain2)
	return restapiServer, nil
}

// wire.go:

//
// Dependency Injection List
//
// injectors stores module_name(key) with injector_func(value) using map.
// For wiring, name of implement using in config with injector function.
//
// Examples :
//
//	var injectors = map[string]interface{}{
// 		"viperconfig": 			InjectViperConfig,
// 		"ossiconesblockchain":	InjectOssiconesBlockchain,
// 	}
//
// 	var eagerInjectors = map[string]interface{}{
// 		"defaultexplorerserver": InjectDefaultExplorerServer,
// 		"defaultrestapiserver":  InjectDefaultRESTAPIServer,
// 	}
//
var injectors = map[string]interface{}{
	"ossiconesblockchain": InjectOssiconesBlockchain,
}

var eagerInjectors = map[string]interface{}{
	"defaultexplorerserver": InjectDefaultExplorerServer,
	"defaultrestapiserver":  InjectDefaultRESTAPIServer,
}
